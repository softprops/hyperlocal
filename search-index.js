var searchIndex = new Map(JSON.parse('[\
["hyperlocal",{"doc":"<code>hyperlocal</code> provides Hyper bindings for Unix domain sockets.","t":"KFKFNNNNNNNNNNNNNNNNNNNMNNNNNNNNNN","n":["UnixClientExt","UnixConnector","UnixListenerExt","Uri","borrow","borrow","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","connect","default","fmt","fmt","from","from","into","into","new","poll_ready","serve","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unix","unix"],"q":[[0,"hyperlocal"],[34,"http::uri"],[35,"hyper_util::client::legacy::connect::sealed"],[36,"tower::util::oneshot"],[37,"core::fmt"],[38,"core::fmt"],[39,"core::convert"],[40,"core::task::wake"],[41,"core::result"],[42,"core::task::poll"],[43,"core::error"],[44,"alloc::boxed"],[45,"core::future::future"],[46,"hyper::body::incoming"],[47,"http::request"],[48,"core::ops::function"],[49,"core::any"],[50,"hyper_util::client::legacy::client"],[51,"http_body"],[52,"core::marker"]],"d":["Extension trait for constructing a hyper HTTP client over …","the <code>[UnixConnector]</code> can be used to construct a …","Extension trait for provisioning a hyper HTTP server over …","A convenience type that can be used to construct Unix …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>[Uri]</code> from a socket address and a path","","Indefinitely accept and respond to connections.","","","","","","","","","Construct a client which speaks HTTP over a Unix domain …","Construct a client which speaks HTTP over a Unix domain …"],"i":[0,0,0,0,1,3,1,3,1,1,3,1,3,1,1,1,3,1,3,1,3,3,1,15,1,3,1,3,1,3,1,3,27,27],"f":"````{ce{}{}}000{{bd}c{}}{bb}{ff}{{ce}h{}{}}0{{cjd}{{l{ed}}}{}{}}{{}b}{{bn}A`}{{fn}A`}{cc{}}099{{cAb}f{{Af{Ad}}}}{{bAh}{{Al{{Aj{hc}}}}}{}}{{Ang}{{`{{Bf{}{{B`{{Aj{h{Bd{Bb}}}}}}}}}}}{{Bf{}{{B`{Aj}}}}}{{Bl{{Bj{Bh}}}{{B`{c}}}}}{{Bl{}{{B`{e}}}}}}<<{c{{Aj{e}}}{}{}}000{cBn{}}0{{}{{C`{bc}}}{CbCd}}0","c":[],"p":[[5,"UnixConnector",0],[5,"Uri",34],[5,"Uri",0],[1,"unit"],[5,"Internal",35],[5,"Oneshot",36],[5,"Formatter",37],[8,"Result",37],[1,"str"],[5,"Path",38],[10,"AsRef",39],[5,"Context",40],[6,"Result",41],[6,"Poll",42],[10,"UnixListenerExt",0],[17,"Output"],[10,"Error",43],[5,"Box",44],[10,"Future",45],[5,"Incoming",46],[5,"Request",47],[10,"Fn",48],[5,"TypeId",49],[5,"Client",50],[10,"Body",51],[10,"Send",52],[10,"UnixClientExt",0]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
