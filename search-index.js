var searchIndex = new Map(JSON.parse('[\
["hyperlocal",{"t":"KFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNN","n":["UnixClientExt","UnixConnector","UnixListenerExt","UnixStream","Uri","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","connect","connected","default","fmt","fmt","fmt","from","from","from","into","into","into","is_write_vectored","new","poll_flush","poll_flush","poll_read","poll_read","poll_ready","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write_vectored","serve","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unix","unix"],"q":[[0,"hyperlocal"],[54,"hyperlocal::client"],[55,"http::uri"],[56,"hyperlocal::uri"],[57,"hyper_util::client::legacy::connect::sealed"],[58,"tower::util::oneshot"],[59,"hyper_util::client::legacy::connect"],[60,"core::fmt"],[61,"std::path"],[62,"core::convert"],[63,"core::pin"],[64,"core::task::wake"],[65,"std::io::error"],[66,"core::result"],[67,"core::task::poll"],[68,"hyper::rt::io"],[69,"tokio::io::read_buf"],[70,"std::io"],[71,"hyperlocal::server"],[72,"core::error"],[73,"alloc::boxed"],[74,"core::future::future"],[75,"hyper::body::incoming"],[76,"http::request"],[77,"core::ops::function"],[78,"core::any"],[79,"hyper_util::client::legacy::client"],[80,"http_body"],[81,"core::marker"]],"i":[0,0,0,0,0,7,1,3,7,1,3,1,1,3,1,3,1,7,1,7,1,3,7,1,3,7,1,3,7,3,7,7,7,7,1,7,7,7,7,7,27,1,3,7,1,3,7,1,3,7,1,3,39,39],"f":"`````{ce{}{}}00000{{bd}c{}}{bb}{ff}{{ce}h{}{}}0{{cjd}{{l{ed}}}{}{}}{nA`}{{}b}{{nAb}Ad}{{bAb}Ad}{{fAb}Ad}{cc{}}00;;;{nAf}{{cAh}f{{Al{Aj}}}}{{{An{n}}B`}{{Bf{{Bd{hBb}}}}}}0{{{An{n}}B`Bh}{{Bf{{Bd{hBb}}}}}}{{{An{n}}B`Bj}{{Bf{{Bl{h}}}}}}{{bB`}{{Bf{{Bd{hc}}}}}{}}33{{{An{n}}B`{C`{Bn}}}{{Bf{{Bd{CbBb}}}}}}0{{{An{n}}B`{C`{Cd}}}{{Bf{{Bd{CbBb}}}}}}{{Cfg}{{`{{Cn{}{{Ch{{Bd{h{Cl{Cj}}}}}}}}}}}{{Cn{}{{Ch{Bd}}}}}{{Dd{{Db{D`}}}{{Ch{c}}}}}{{Dd{}{{Ch{e}}}}}}{ce{}{}}0{c{{Bd{e}}}{}{}}00000{cDf{}}00{{}{{Dh{bc}}}{DjDl}}0","D":"B`","p":[[5,"UnixConnector",0,54],[5,"Uri",55],[5,"Uri",0,56],[1,"unit"],[5,"Internal",57],[5,"Oneshot",58],[5,"UnixStream",0,54],[5,"Connected",59],[5,"Formatter",60],[8,"Result",60],[1,"bool"],[1,"str"],[5,"Path",61],[10,"AsRef",62],[5,"Pin",63],[5,"Context",64],[5,"Error",65],[6,"Result",66],[6,"Poll",67],[5,"ReadBufCursor",68],[5,"ReadBuf",69],[8,"Result",65],[1,"u8"],[1,"slice"],[1,"usize"],[5,"IoSlice",70],[10,"UnixListenerExt",0,71],[17,"Output"],[10,"Error",72],[5,"Box",73],[10,"Future",74],[5,"Incoming",75],[5,"Request",76],[10,"Fn",77],[5,"TypeId",78],[5,"Client",79],[10,"Body",80],[10,"Send",81],[10,"UnixClientExt",0]],"r":[[0,54],[1,54],[2,71],[3,54],[4,56]],"b":[[30,"impl-Write-for-UnixStream"],[31,"impl-AsyncWrite-for-UnixStream"],[32,"impl-Read-for-UnixStream"],[33,"impl-AsyncRead-for-UnixStream"],[35,"impl-Write-for-UnixStream"],[36,"impl-AsyncWrite-for-UnixStream"],[37,"impl-Write-for-UnixStream"],[38,"impl-AsyncWrite-for-UnixStream"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACYABAAGABAAHQAAAB8ACQAqAAoA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
